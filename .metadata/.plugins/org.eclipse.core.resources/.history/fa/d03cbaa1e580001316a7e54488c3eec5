package com.acertainsupplychain.client.tests;

import java.util.ArrayList;
import org.junit.BeforeClass;
import org.junit.Test;

import com.acertainsupplychain.business.CertainItemSupplier;
import com.acertainsupplychain.business.ItemQuantity;
import com.acertainsupplychain.business.OrderStep;
import com.acertainsupplychain.client.ItemSupplierHTTPProxy;
import com.acertainsupplychain.exception.OrderProcessingException;
import com.acertainsupplychain.interfaces.ItemSupplier;

public class ItemSupplierTest {
    private static ItemSupplier client;
    private static boolean localTest = true;
    private static int id = 0;

    @BeforeClass
    public static void setUpBeforeClass() {
        try {
            if (localTest) {
                client = new CertainItemSupplier(id);
            } else {
                client = new ItemSupplierHTTPProxy(id);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @Test(expected=OrderProcessingException.class)
    public void testExecuteStepWrongSupplierId() throws OrderProcessingException {
        OrderStep step = new OrderStep(1, new ArrayList<ItemQuantity>());
        client.executeStep(step);
    }
    
    @Test(expected=InvalidItemException.class)
    public void testExecuteStepWrongSupplierId() throws OrderProcessingException {
        OrderStep step = new OrderStep(1, new ArrayList<ItemQuantity>());
        client.executeStep(step);
    }
    
    /*@Test
    public void testGetOrdersPerItem() {
        
    }*/
}