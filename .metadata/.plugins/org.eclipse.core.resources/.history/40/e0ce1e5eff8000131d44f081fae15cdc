package com.acertainsupplychain.client.tests;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.junit.BeforeClass;
import org.junit.Test;

import com.acertainsupplychain.business.CertainItemSupplier;
import com.acertainsupplychain.business.CertainOrderManager;
import com.acertainsupplychain.business.ItemQuantity;
import com.acertainsupplychain.business.OrderStep;
import com.acertainsupplychain.client.ItemSupplierHTTPProxy;
import com.acertainsupplychain.client.OrderManagerHTTPProxy;
import com.acertainsupplychain.interfaces.ItemSupplier;
import com.acertainsupplychain.interfaces.OrderManager;
import com.acertainsupplychain.exception.OrderProcessingException;

public class OrderManagerTest {
    private static OrderManager client;
    private static boolean localTest = true;
    private static int id = 0;
    private static Random r = new Random();

    @BeforeClass
    public static void setUpBeforeClass() {
        try {
            if (localTest) {
                client = new CertainOrderManager();
            } else {
                client = new OrderManagerHTTPProxy();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @Test(expected=OrderProcessingException.class)
    public void testRegisterOrderWorkflowInvalidSupplierId() {
        List<OrderStep> workflow = new ArrayList<OrderStep>();
        OrderStep step = new OrderStep(2, new ArrayList<ItemQuantity>());
        workflow.add(step);
        client.registerOrderWorkflow(workflow);
    }
}
